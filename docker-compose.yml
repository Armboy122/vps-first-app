version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: PeaTransformer
    volumes:
      - postgresql_pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sa -d PeaTransformer"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    env_file:
      - .env
    networks:
      - mynetwork
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    entrypoint: >
      sh -c "
      npx prisma migrate deploy --schema=./prisma/schema.prisma;
      yarn start;
      "

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase_metadata
      MB_DB_PORT: 5432
      MB_DB_USER: sa
      MB_DB_PASS: 1234
      MB_DB_HOST: db
      MB_EMBEDDING_REPORTING_ENABLED: "false"
      MB_ADMIN_EMAIL: admin@example.com
      MB_ADMIN_PASSWORD: admin123
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

volumes:
  postgresql_pgdata:
    driver: local

networks:
  mynetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
