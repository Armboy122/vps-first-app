#!/bin/bash
set -e

# ---------- CONFIG ----------
IMAGE_NAME="armboy/vps-first-app"
CONTAINER_NAME="vps-first-app-dev"
DEFAULT_RUNTIME_DAYS=2
DEFAULT_PORT=3002
TAG="dev-latest"
# ----------------------------

days_to_seconds() {
  echo $(($1 * 86400))
}

check_port_in_use() {
  local port=$1
  if command -v lsof >/dev/null 2>&1; then
    lsof -i :$port >/dev/null 2>&1
    return $?
  elif command -v netstat >/dev/null 2>&1; then
    netstat -tuln | grep -q ":$port "
    return $?
  else
    return 1
  fi
}

find_free_port() {
  local port=$1
  while check_port_in_use $port; do
    port=$((port + 1))
    if [ $port -gt 65535 ]; then
      echo "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ" >&2
      return 1
    fi
  done
  echo $port
}

show_help() {
  echo "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: $0 [options]"
  echo "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:"
  echo "  -d, --days <number>      ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ container ‡∏£‡∏±‡∏ô [‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: $DEFAULT_RUNTIME_DAYS]"
  echo "  -f, --forever            ‡∏£‡∏±‡∏ô container ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≥‡∏´‡∏ô‡∏î"
  echo "  -t, --tag <tag>          ‡∏£‡∏∞‡∏ö‡∏∏ tag ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡πÉ‡∏ä‡πâ $TAG)"
  echo "  -p, --port <port>        ‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ [‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: $DEFAULT_PORT]"
  echo "  -a, --auto-port          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏≠‡∏∑‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
  echo "  -h, --help               ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
  exit 0
}

RUNTIME_DAYS=$DEFAULT_RUNTIME_DAYS
FOREVER=false
CUSTOM_TAG=""
PORT=$DEFAULT_PORT
AUTO_PORT=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    -d|--days) RUNTIME_DAYS="$2"; shift 2 ;;
    -f|--forever) FOREVER=true; shift ;;
    -t|--tag) CUSTOM_TAG="$2"; shift 2 ;;
    -p|--port) PORT="$2"; shift 2 ;;
    -a|--auto-port) AUTO_PORT=true; shift ;;
    -h|--help) show_help ;;
    *) echo "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: $1"; show_help ;;
  esac
done

if [ -n "$CUSTOM_TAG" ]; then
  TAG="$CUSTOM_TAG"
fi

FULL_IMAGE_NAME="$IMAGE_NAME:$TAG"

echo "üöÄ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏£‡∏±‡∏ô development container (Bun):"
echo " - Image: $FULL_IMAGE_NAME"
echo " - Container name: $CONTAINER_NAME"
echo " - Port: $PORT"

if [ "$FOREVER" = true ]; then
  echo " - ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≥‡∏´‡∏ô‡∏î"
else
  echo " - ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ $RUNTIME_DAYS ‡∏ß‡∏±‡∏ô"
fi

if docker ps -a --format '{{.Names}}' | grep -q "^$CONTAINER_NAME$"; then
  echo "üõë ‡∏û‡∏ö container ‡∏ä‡∏∑‡πà‡∏≠ $CONTAINER_NAME ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏¢‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏•‡∏ö..."
  docker stop $CONTAINER_NAME || true
  docker rm $CONTAINER_NAME || true
fi

if check_port_in_use $PORT; then
  echo "‚ö†Ô∏è ‡∏û‡∏≠‡∏£‡πå‡∏ï $PORT ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
  if [ "$AUTO_PORT" = true ]; then
    NEW_PORT=$(find_free_port $PORT)
    echo "üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï $NEW_PORT ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
    PORT=$NEW_PORT
  else
    echo "‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:"
    echo "1) ‡πÉ‡∏ä‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏≠‡∏∑‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
    echo "2) ‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÉ‡∏´‡∏°‡πà"
    echo "3) ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
    read -p "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å [1-3]: " PORT_CHOICE
    case $PORT_CHOICE in
      1)
        NEW_PORT=$(find_free_port $PORT)
        echo "üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï $NEW_PORT"
        PORT=$NEW_PORT
        ;;
      2)
        read -p "‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÉ‡∏´‡∏°‡πà: " NEW_PORT
        while check_port_in_use $NEW_PORT; do
          echo "‚ö†Ô∏è ‡∏û‡∏≠‡∏£‡πå‡∏ï $NEW_PORT ‡∏¢‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏≠‡∏∑‡πà‡∏ô"
          read -p "‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÉ‡∏´‡∏°‡πà: " NEW_PORT
        done
        PORT=$NEW_PORT
        ;;
      *) echo "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"; exit 1 ;;
    esac
  fi
fi

echo "üì• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á development image ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î.."
docker pull $FULL_IMAGE_NAME

echo "üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô development container ‡∏ö‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï $PORT..."
docker run -d \
  --name $CONTAINER_NAME \
  -p $PORT:$DEFAULT_PORT \
  -e PORT=$DEFAULT_PORT \
  -e NODE_ENV=development \
  --restart unless-stopped \
  $FULL_IMAGE_NAME

echo "‚úÖ Development container ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß"
echo "üìä ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà http://localhost:$PORT"
echo "üîÑ ‡πÇ‡∏´‡∏°‡∏î development ‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£ hot-reload ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå"

if [ "$FOREVER" = false ]; then
  RUNTIME_SECONDS=$(days_to_seconds $RUNTIME_DAYS)
  echo "‚è±Ô∏è Container ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ $RUNTIME_DAYS ‡∏ß‡∏±‡∏ô ($(printf "%'d" $RUNTIME_SECONDS) ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)"
  echo "üïí ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß container ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤)"
  (sleep $RUNTIME_SECONDS && docker stop $CONTAINER_NAME && echo "üõë Container ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤)") &
fi

echo ""
echo "üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:"
echo "- ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏∏‡∏î container ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: docker stop $CONTAINER_NAME"
echo "- ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: docker logs -f $CONTAINER_NAME"
