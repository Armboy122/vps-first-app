# UAT Environment Dockerfile - Optimized for Speed & Cache
FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat openssl curl dumb-init
WORKDIR /app

# Dependencies Layer (changes rarely - excellent cache)
FROM base AS deps
COPY package*.json ./
RUN --mount=type=cache,target=/root/.npm \
    npm ci --only=production --maxsockets=10

# Build Dependencies Layer (changes rarely - excellent cache)  
FROM base AS build-deps
COPY package*.json ./
RUN --mount=type=cache,target=/root/.npm \
    npm ci --maxsockets=10

# Prisma Layer (changes when schema changes - good cache)
FROM base AS prisma
COPY --from=build-deps /app/node_modules ./node_modules
COPY prisma ./prisma
COPY package*.json ./
RUN --mount=type=cache,target=/app/node_modules/.cache/prisma \
    npx prisma generate

# Builder (changes when code changes - rebuild when needed)
FROM base AS builder
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PUPPETEER_SKIP_DOWNLOAD=true

# Copy dependencies and prisma client
COPY --from=build-deps /app/node_modules ./node_modules
COPY --from=prisma /app/node_modules/.prisma ./node_modules/.prisma

# Copy source code (this layer changes most frequently)
COPY . .

# Build with cache mounts
RUN --mount=type=cache,target=/app/.next/cache \
    --mount=type=cache,target=/app/node_modules/.cache \
    NODE_OPTIONS="--max-old-space-size=4096" npm run build

# Final Runtime Image (minimal & secure)
FROM base AS runner
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

# Copy only what's needed for runtime
COPY --from=deps /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma

USER nextjs
EXPOSE 3000
CMD ["dumb-init", "node", "server.js"]